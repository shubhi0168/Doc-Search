CS 

 Data structures  

Bloom filters (BFs) are used in many applications for approximate check of set membership. Counting Bloom filters (CBFs) are an extension of BFs that enable the deletion of entries at the cost of additional storage requirements. Several alternatives to CBFs can be used to reduce the storage overhead. For example schemes based on d-left hashing or Cuckoo hashing have been proposed. Recently, also a new type of CBF, the Variable Increment Counting Bloom Filter (VI-CBF) has been introduced to improve performance. The VI-CBF uses different increments in the filter counters to reduce the false positive rate and therefore the storage requirements. In this paper, another mechanism to improve CBF performance: the Fingerprint Counting Bloom Filter (FP-CBF) is presented. The proposed scheme is based on the use of fingerprints on the filter entries to reduce the false positive rate. This results in a simpler implementation than VI-CBFs in terms of number of hash functions and arithmetic operations. The false positive rate of the proposed scheme has also been analyzed theoretically and by simulation and compared with the VI-CBF. The results show that the proposed scheme can achieve lower false positive rates than those of a simple VI-CBF implementation. When compared with a better and more complex VI-CBF implementation, the FP-CBF outperforms it when the number of bits per element is large while the VI-CBF is better for low number of bits per element. (C) 2015 Elsevier B.V. All rights reserved.