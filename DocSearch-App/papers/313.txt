CS 

 Symbolic computation  

Algorithmic music composition is concerned with generation of music through algorithms. Using natural language text as the basis for generation opens up interesting ideas for research. We have identified three strategies for mapping text to music: using all the letters, using only vowels and using vowels in conjunction with the word's part of speech (POS). The third approach is best achieved with a full parse tree since it helps in identifying the most probable POS tag. Using text input and applying these strategies, we derive a sequence of notes (pitches) as well as the rhythm (note durations). Punctuation symbols in the input text are mapped to Rest. To achieve greater flexibility with the composition, instead of directly mapping to concrete notes, we use relativized note indices and combine these with Scale, Key and Octave parameters to determine the actual note. Our music composition library is implemented in Wolfram's Mathematica, a popular symbolic computation environment. For parsing the input text we use J/Link to make call-outs to Apache OpenNLP library. In this paper, we describe our strategies in detail and suggest possible areas for future work.