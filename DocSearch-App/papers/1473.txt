CS 

 Software engineering  

Effective team communication is a prerequisite for software quality and project success. It implies correctly elicited customer requirements, conduction of occurring change requests and to adhere releases. Team communication is a complex construct that consists of numerous characteristics, individual styles, influencing factors and dynamic intensities during a project. These elements are complicated to be measured or scheduled, especially in newly formed teams. According to software developers with few experiences in teams, it would be highly desirable to recognize dysfunctional or underestimated communication behaviors already in early project phases. Otherwise, negative affects may cause delay of releases or even endanger software quality. We introduce an approach on the feasibility of forecasting team's communication behavior in student software projects. We build a very first forecasting model that involves software engineering and industrial psychological terms to extract multi week communication forecasts with accurate results. The model consists of a k-nearest neighbor machine learning algorithm and is trained and evaluated with 34 student software projects from a previously taken field study. This study is an encouraging first step towards forecasting team communication to reveal potential miscommunications during a project. It is our aim to give young software developing teams an experience-based assistance about their information flow and enable adjustment for dysfunctional communication, to avoid fire fighting situation or even risks of alternating software qualities.