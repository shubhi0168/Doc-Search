CS 

 Algorithm design  

As part of curriculum changes in South Africa, an introductory programming language, Scratch, must first be taught before switching to the well-established teaching of Delphi. The nature of programming in Scratch is considerably different from that in Delphi. It was assumed that the teaching of Scratch as introductory programming language could support learners' understanding of Delphi. Teachers did not receive much training in Scratch. This study explores teachers' experiences of their first year of the teaching of Scratch. The purpose of the research was to understand how Scratch can be used effectively as a transitioning language to Delphi and to deduce guidelines for teaching Scratch as introduction to object-oriented programming in Delphi. A qualitative research method, within the interpretive paradigm, was selected for this research. Interviews were done with eight randomly selected Information Technology (IT) teachers in the province of North-West, South Africa to gain insight into their experiences of teaching Scratch in 2012, the first year of implementing the new curriculum. Findings show that teachers were uncertain how to teach programming concepts and how to integrate problem solving and algorithm design into teaching Scratch. The focus of teaching was on Scratch, instead of on teaching programming concepts with Scratch. Emerging guidelines emphasise the integration of problem solving and algorithm design; the creation of opportunities to expose learners to error handling and program testing; and the inculcatation of programming concepts. We furthermore recommend active teaching-learning strategies such as pair programming.