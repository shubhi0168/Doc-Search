CS 

 Parallel computing  

Adding the number of computing nodes is a common approach to achieving higher performance in a parallel computing system. However, with constraint of fixed system architecture and fixed algorithm structure, it is difficult to improve the performance of parallel computing only by extending its scale absolutely. To realize such extension with fixed structure, we analyze key factors from architecture and parallel task, which affect the scalability, and then use the weighted graph to model architecture as well as parallel task. Especially, focusing on the case that architecture graph and parallel task graph are homogeneous, we propose the extension method of graph similarity; for the case that architecture graph and parallel task graph are heterogeneous, a critical-path-unchanged scaling method is proposed. Actually, the above two extending methods do not change the graph's structure. They only adjust the node weight and edge-weight in the relevant graph. Furthermore, through mathematical derivation, some conclusions about the new scaling methods are drawn. Finally, in order to verify the effectiveness, some simulative experiments are conducted on the platform SimGrid. The experimental results show that the proposed methods can realize iso-speed-efficiency extension, and can guide practical extensions for parallel computing.